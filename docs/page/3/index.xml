<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NotFound</title>
    <link>https://notfound.cn/</link>
    <description>Recent content on NotFound</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&lt;a href=&#34;http://www.beian.miit.gov.cn&#34;&gt;粤ICP备17092723号&lt;/a&gt;
</copyright>
    <lastBuildDate>Sat, 15 May 2021 16:00:00 +0800</lastBuildDate>
    
        <atom:link href="https://notfound.cn/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>Gradle 入门</title>
        <link>https://notfound.cn/posts/java-gradle-start/</link>
        <pubDate>Tue, 16 Feb 2021 15:11:00 +0800</pubDate>
        
        <guid>https://notfound.cn/posts/java-gradle-start/</guid>
        <description>NotFound https://notfound.cn/posts/java-gradle-start/ -&lt;h2 id=&#34;gradle-入门&#34;&gt;Gradle 入门&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Gradle 6.8&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;初始化项目&#34;&gt;初始化项目&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;gradle init&lt;/code&gt; 可初始化项目：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;gradle init --type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;basic --dsl&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;groovy --project-name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;生成的目录结构如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;.
├── build.gradle
├── .gitattributes
├── .gitignore
├── .gradle
├── gradle/wrapper/
├── gradlew
├── gradlew.bat
└── settings.gradle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;包含-main-方法的-jar&#34;&gt;包含 Main 方法的 jar&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;新建文件 &lt;code&gt;src/main/java/example/Main.java&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; example&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Main&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改 &lt;code&gt;build.gradle&lt;/code&gt; ，把所有依赖一起打包：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;plugins &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    id &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;java&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

jar &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    manifest &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        attributes &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Main-Class&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;example.Main&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    from &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        configurations&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;compile&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;collect&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; it&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;isDirectory&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; it &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; zipTree&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;it&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
        configurations&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;runtimeClasspath&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;collect&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; it&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;isDirectory&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; it &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; zipTree&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;it&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编译、执行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gradle build
java -jar build/libs/example.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;war-plugin&#34;&gt;War Plugin&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;新建文件 &lt;code&gt;src/main/java/example/HelloServlet.java&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; example&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; javax.servlet.ServletException&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; javax.servlet.annotation.WebServlet&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; javax.servlet.http.HttpServlet&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletRequest&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletResponse&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.io.IOException&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.io.PrintWriter&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;@WebServlet&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/hello&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HelloServlet&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; HttpServlet &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;doGet&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;HttpServletRequest req&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; HttpServletResponse resp&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; ServletException&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; IOException &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        PrintWriter out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; resp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getWriter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
        out&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        out&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改 &lt;code&gt;build.gradle&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;plugins &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    id &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;war&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

repositories &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    mavenCentral&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    compileOnly group: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;javax.servlet&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;javax.servlet-api&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; version: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;4.0.1&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编译、部署&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;gradle build
cp build/libs/example.war $CATALINA_HOME/webapps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;访问 &lt;a href=&#34;http://localhost:8080/example/hello&#34;&gt;http://localhost:8080/example/hello&lt;/a&gt; 即可&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;application-plugin&#34;&gt;Application Plugin&lt;/h3&gt;
&lt;p&gt;Application Plugin 能创建一个可分发的 ZIP 文件，其中包含了依赖以及启动脚本。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;初始化&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gradle init &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;       --dsl&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;groovy &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;       --package&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;app &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;       --project-name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;app  &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;       --test-framework&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;junit-jupiter &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;       --type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;java-application
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打包成 zip&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gradle distZip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解压，运行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;unzip app/build/distributions/app.zip -d /tmp/app
/tmp/app/bin/app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;添加测试&#34;&gt;添加测试&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;新建 &lt;code&gt;src/main/java/example/Hello.java&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; example&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Hello&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;getGreeting&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新建 &lt;code&gt;src/test/java/example/HelloTest.java&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; example&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.junit.jupiter.api.Test&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import static&lt;/span&gt; org.junit.jupiter.api.Assertions.*&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HelloTest&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Test&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getGreeting&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        assertEquals&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Hello&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getGreeting&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World?&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改 &lt;code&gt;build.gradle&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;plugins &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    id &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;java&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

repositories &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    mavenCentral&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

dependencies &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    testImplementation group: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.junit.jupiter&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;junit-jupiter-api&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; version: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;5.7.1&amp;#39;&lt;/span&gt;
    testImplementation group: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org.junit.jupiter&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;junit-jupiter-engine&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; version: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;5.7.1&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

test &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    useJUnitPlatform&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;gradle test
gradle test --info
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.gradle.org/current/userguide/build%5Finit%5Fplugin.html&#34;&gt;Build Init Plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.gradle.org/current/userguide/war%5Fplugin.html&#34;&gt;The War Plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.gradle.org/current/userguide/java%5Fplugin.html&#34;&gt;The Java Plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.gradle.org/current/userguide/application%5Fplugin.html&#34;&gt;The Application Plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.baeldung.com/gradle-fat-jar&#34;&gt;Creating a Fat Jar in Gradle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.gradle.org/current/userguide/java%5Ftesting.html#using%5Fjunit5&#34;&gt;Using JUnit 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/49278063/how-do-i-create-an-executable-fat-jar-with-gradle-with-implementation-dependenci&#34;&gt;How do I create an executable fat jar with Gradle with implementation dependencies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://notfound.cn/posts/java-gradle-start/ - &lt;a href=&#34;http://www.beian.miit.gov.cn&#34;&gt;粤ICP备17092723号&lt;/a&gt;
</description>
        </item>
    
    
    
        <item>
        <title>Git 服务端 Hooks</title>
        <link>https://notfound.cn/posts/git-server-hooks/</link>
        <pubDate>Sat, 20 Jun 2020 08:30:56 +0800</pubDate>
        
        <guid>https://notfound.cn/posts/git-server-hooks/</guid>
        <description>NotFound https://notfound.cn/posts/git-server-hooks/ -&lt;p&gt;调用过程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;pre-receive&lt;/code&gt; 可阻止所有 ref 更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;update&lt;/code&gt; 可阻止单个 ref 更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;post-receive&lt;/code&gt; 无法阻止 ref 更新&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;pre-receive&#34;&gt;pre-receive&lt;/h2&gt;
&lt;h3 id=&#34;特点&#34;&gt;特点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;无参数调用&lt;/li&gt;
&lt;li&gt;标准输入传递引用信息&lt;/li&gt;
&lt;li&gt;以非零值退出，所有的推送内容都不会被接受&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;用途&#34;&gt;用途&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;钩子阻止对引用进行非快进（non-fast-forward）的更新&lt;/li&gt;
&lt;li&gt;对该推送所修改的所有引用和文件进行访问控制&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;示例&#34;&gt;示例&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env ruby&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;LINE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;

puts &lt;span style=&#34;color:#66d9ef&#34;&gt;LINE&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;each &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;k, v&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
  puts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;k&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;v&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start_with?(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GIT&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

puts &lt;span style=&#34;color:#66d9ef&#34;&gt;LINE&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# sha1-old SP sha1-new SP refname LF&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; line &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;STDIN&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gets
  puts line
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

puts &lt;span style=&#34;color:#66d9ef&#34;&gt;LINE&lt;/span&gt;
exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;推送两个分支&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;git push origin master:master master:dev
枚举对象: 3, 完成.
对象计数中: 100% (3/3), 完成.
使用 4 个线程进行压缩
压缩对象中: 100% (2/2), 完成.
写入对象中: 100% (2/2), 218 字节 | 218.00 KiB/s, 完成.
总共 2（差异 0），复用 0（差异 0），包复用 0
remote: --------------------------------------------------------------------------------
remote: GIT_ALTERNATE_OBJECT_DIRECTORIES=/tmp/git/example.git/./objects
remote: GIT_DIR=.
remote: GIT_EXEC_PATH=/usr/lib/git-core
remote: GIT_OBJECT_DIRECTORY=/tmp/git/example.git/./objects/incoming-UqdPAn
remote: GIT_PUSH_OPTION_COUNT=0
remote: GIT_QUARANTINE_PATH=/tmp/git/example.git/./objects/incoming-UqdPAn
remote: --------------------------------------------------------------------------------
remote: 2f2cccd39a3f1dab015f19497da59656d268c2dd 2c4c31b2be6a45b3664a7aebc384748ecf835056 refs/heads/dev
remote: 2f2cccd39a3f1dab015f19497da59656d268c2dd 2c4c31b2be6a45b3664a7aebc384748ecf835056 refs/heads/master
remote: --------------------------------------------------------------------------------
To /tmp/git/example.git
 ! [remote rejected] master -&amp;gt; dev (pre-receive hook declined)
 ! [remote rejected] master -&amp;gt; master (pre-receive hook declined)
error: 推送一些引用到 &amp;#39;/tmp/git/example.git&amp;#39; 失败
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;update&#34;&gt;update&lt;/h2&gt;
&lt;h3 id=&#34;特点-1&#34;&gt;特点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;受三个参数：引用的名字（分支），推送前的引用指向的内容的 SHA-1 值，以及用户准备推送的内容的 SHA-1 值&lt;/li&gt;
&lt;li&gt;会为每一个准备更新的分支各运行一次&lt;/li&gt;
&lt;li&gt;如果 update 脚本以非零值退出，只有相应的那一个引用会被拒绝；其余的依然会被更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;用途-1&#34;&gt;用途&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;钩子阻止对引用进行非快进（non-fast-forward）的更新&lt;/li&gt;
&lt;li&gt;对该推送所修改的所有引用和文件进行访问控制&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;示例-1&#34;&gt;示例&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env ruby&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;LINE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;

puts &lt;span style=&#34;color:#66d9ef&#34;&gt;LINE&lt;/span&gt;
puts &lt;span style=&#34;color:#66d9ef&#34;&gt;ARGV&lt;/span&gt;
puts &lt;span style=&#34;color:#66d9ef&#34;&gt;LINE&lt;/span&gt;

exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;推送两个分支：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;git push origin master:master master:dev
枚举对象: 3, 完成.
对象计数中: 100% (3/3), 完成.
使用 4 个线程进行压缩
压缩对象中: 100% (2/2), 完成.
写入对象中: 100% (2/2), 218 字节 | 218.00 KiB/s, 完成.
总共 2（差异 0），复用 0（差异 0），包复用 0
remote: --------------------------------------------------------------------------------
remote: refs/heads/dev
remote: 2f2cccd39a3f1dab015f19497da59656d268c2dd
remote: 2c4c31b2be6a45b3664a7aebc384748ecf835056
remote: --------------------------------------------------------------------------------
remote: error: hook declined to update refs/heads/dev
remote: --------------------------------------------------------------------------------
remote: refs/heads/master
remote: 2f2cccd39a3f1dab015f19497da59656d268c2dd
remote: 2c4c31b2be6a45b3664a7aebc384748ecf835056
remote: --------------------------------------------------------------------------------
remote: error: hook declined to update refs/heads/master
To /tmp/git/example.git
 ! [remote rejected] master -&amp;gt; dev (hook declined)
 ! [remote rejected] master -&amp;gt; master (hook declined)
error: 推送一些引用到 &amp;#39;/tmp/git/example.git&amp;#39; 失败
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;post-receive&#34;&gt;post-receive&lt;/h2&gt;
&lt;h3 id=&#34;特点-2&#34;&gt;特点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;无参数调用&lt;/li&gt;
&lt;li&gt;标准输入传递引用信息&lt;/li&gt;
&lt;li&gt;在整个过程完结以后运行&lt;/li&gt;
&lt;li&gt;无法终止推送进程&lt;/li&gt;
&lt;li&gt;客户端在它结束运行之前将保持连接状态&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;用途-2&#34;&gt;用途&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;更新其他系统服务或者通知用户&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;示例-2&#34;&gt;示例&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env ruby&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;LINE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;

puts &lt;span style=&#34;color:#66d9ef&#34;&gt;LINE&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;each &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;k, v&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
  puts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;k&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;v&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start_with?(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GIT&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

puts &lt;span style=&#34;color:#66d9ef&#34;&gt;LINE&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# sha1-old SP sha1-new SP refname LF&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; line &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;STDIN&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gets
  puts line
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

puts &lt;span style=&#34;color:#66d9ef&#34;&gt;LINE&lt;/span&gt;
exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;推送两个分支：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;git push origin master:master master:dev
枚举对象: 3, 完成.
对象计数中: 100% (3/3), 完成.
使用 4 个线程进行压缩
压缩对象中: 100% (2/2), 完成.
写入对象中: 100% (2/2), 214 字节 | 214.00 KiB/s, 完成.
总共 2（差异 1），复用 0（差异 0），包复用 0
remote: --------------------------------------------------------------------------------
remote: GIT_DIR=.
remote: GIT_EXEC_PATH=/usr/lib/git-core
remote: GIT_PUSH_OPTION_COUNT=0
remote: --------------------------------------------------------------------------------
remote: 07e90506b50083173ff08015f115403c466dfcf5 17f4a373571ac61e82a591dc51b353c6fa02af90 refs/heads/dev
remote: 07e90506b50083173ff08015f115403c466dfcf5 17f4a373571ac61e82a591dc51b353c6fa02af90 refs/heads/master
remote: --------------------------------------------------------------------------------
To /tmp/git/example.git
   07e9050..17f4a37  master -&amp;gt; dev
   07e9050..17f4a37  master -&amp;gt; maste
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90&#34;&gt;自定义 Git - Git 钩子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://notfound.cn/posts/git-server-hooks/ - &lt;a href=&#34;http://www.beian.miit.gov.cn&#34;&gt;粤ICP备17092723号&lt;/a&gt;
</description>
        </item>
    
    
    
        <item>
        <title>使用 strace 查看 Ruby 线程系统调用</title>
        <link>https://notfound.cn/posts/process-strace/</link>
        <pubDate>Fri, 29 May 2020 21:07:45 +0800</pubDate>
        
        <guid>https://notfound.cn/posts/process-strace/</guid>
        <description>NotFound https://notfound.cn/posts/process-strace/ -&lt;ul&gt;
&lt;li&gt;Ubuntu 18.04&lt;/li&gt;
&lt;li&gt;通过 strace 查看 Unicorn 中开启的监控线程是否运行正常&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;heading&#34;&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;查看进程 ID&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ ps -ef | grep unicorn
notfound    20178  6419  2 11:22 ?        00:00:17 unicorn master -E production -c config/unicorn.rb -D
notfound    20192 20178  0 11:22 ?        00:00:00 unicorn worker[0] -E production -c config/unicorn.rb -D
notfound    20195 20178  0 11:22 ?        00:00:00 unicorn worker[1] -E production -c config/unicorn.rb -D
notfound    20198 20178  0 11:22 ?        00:00:00 unicorn worker[2] -E production -c config/unicorn.rb -D
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看进程和线程&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ pstree -pt 20178
bundle(20178)─┬─bundle(20192)─┬─{ruby-timer-thr}(20194)
              │               └─{ruby_sampler}(20201)
              ├─bundle(20195)─┬─{ruby-timer-thr}(20197)
              │               └─{ruby_sampler}(20202)
              ├─bundle(20198)─┬─{ruby-timer-thr}(20200)
              │               └─{ruby_sampler}(20203)
              ├─{ruby-timer-thr}(20199)
              ├─{server.rb:293}(20212)
              ├─{unicorn_sampler}(20190)
              ├─{utils.rb:156}(20213)
              └─{web_exporter}(20191)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看线程执行内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ strace -p 20201
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;man strace&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;man pstree&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://notfound.cn/posts/process-strace/ - &lt;a href=&#34;http://www.beian.miit.gov.cn&#34;&gt;粤ICP备17092723号&lt;/a&gt;
</description>
        </item>
    
    
    
        <item>
        <title>PostgreSQL 安装与使用</title>
        <link>https://notfound.cn/posts/postgre-sql-start/</link>
        <pubDate>Tue, 26 May 2020 19:17:49 +0800</pubDate>
        
        <guid>https://notfound.cn/posts/postgre-sql-start/</guid>
        <description>NotFound https://notfound.cn/posts/postgre-sql-start/ -&lt;ul&gt;
&lt;li&gt;Ubuntu 18.04&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;p&gt;编辑 &lt;code&gt;/etc/apt/sources.list.d/pgdg.list&lt;/code&gt;，添加：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
sudo apt-get update
sudo apt install postgresql-12 pgadmin4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;pgadmin4 图形客户端&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常用命令&#34;&gt;常用命令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;通过用户 &lt;code&gt;postgres&lt;/code&gt; 启动客户端&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo su - postgres
psql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\?&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-psql&#34; data-lang=&#34;psql&#34;&gt;\?    -- 帮助
\l    -- 列出所有数据库
\du   -- 列出角色
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以指定角色（用户）登录指定数据库&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;psql -h 127.0.0.1 -U example -d example_db
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建具备登录权限的角色&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-psql&#34; data-lang=&#34;psql&#34;&gt;CREATE ROLE example LOGIN PASSWORD &#39;YOUR_PASSWORD&#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除角色&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-psql&#34; data-lang=&#34;psql&#34;&gt;DROP ROLE example;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改密码&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-psql&#34; data-lang=&#34;psql&#34;&gt;ALTER ROLE example PASSWORD &#39;NEW_PASSWORD&#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建数据库并指定所有者&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-psql&#34; data-lang=&#34;psql&#34;&gt;CREATE DATABASE example_db WITH owner = example;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除数据库&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-psql&#34; data-lang=&#34;psql&#34;&gt;DROP DATABASE example_db;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pgpass-免密登录&#34;&gt;.pgpass 免密登录&lt;/h2&gt;
&lt;p&gt;新建 &lt;code&gt;~/.pgpass&lt;/code&gt; 文件，添加：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;127.0.0.1:5432:example_db:example:YOUR_PASSWORD
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;修改文件权限：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;0600&lt;/span&gt; ~/.pgpass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;免密登录：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;psql -h 127.0.0.1 -U example -d example_db
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/download/linux/ubuntu/&#34;&gt;Linux downloads (Ubuntu)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/12/libpq-pgpass.html&#34;&gt;The Password File&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://notfound.cn/posts/postgre-sql-start/ - &lt;a href=&#34;http://www.beian.miit.gov.cn&#34;&gt;粤ICP备17092723号&lt;/a&gt;
</description>
        </item>
    
    
    
        <item>
        <title>Ruby Rack</title>
        <link>https://notfound.cn/posts/ruby-rack/</link>
        <pubDate>Thu, 21 May 2020 20:24:53 +0800</pubDate>
        
        <guid>https://notfound.cn/posts/ruby-rack/</guid>
        <description>NotFound https://notfound.cn/posts/ruby-rack/ -&lt;p&gt;模块化的 Ruby Web 服务接口&lt;/p&gt;
&lt;h2 id=&#34;rackup&#34;&gt;rackup&lt;/h2&gt;
&lt;p&gt;创建 &lt;code&gt;config.ru&lt;/code&gt;，添加：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# config.ru&lt;/span&gt;
run lambda {&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;env&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;, {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;}, &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;OK&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行 &lt;code&gt;rackup&lt;/code&gt;，启动 HTTP 服务器。&lt;/p&gt;
&lt;h3 id=&#34;过程&#34;&gt;过程&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;rackup&lt;/code&gt; 文件内容如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env ruby&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# frozen_string_literal: true&lt;/span&gt;

require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rack&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Rack&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Server&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Rack::Server#options&lt;/code&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Rack::Server#default_options&lt;/code&gt; 这里决定了查找的默认文件名 &lt;code&gt;options[:config]= &#39;config.ru&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Rack::Server#start&lt;/code&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Rack::Server#server&lt;/code&gt; 尝试 require &lt;code&gt;puma thin falcon webrick&lt;/code&gt; 中的一个服务，假设为 &lt;code&gt;webrick&lt;/code&gt;，则返回 &lt;code&gt;Rack::Handler::WEBrick&lt;/code&gt; 类
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Rack::Server#wrapped_app&lt;/code&gt; 解析 &lt;code&gt;config.ru&lt;/code&gt; 获取 &lt;code&gt;wrapped_app&lt;/code&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Rack::Server#app&lt;/code&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Rack::Server#build_app_and_options_from_config&lt;/code&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Rack::Builder.parse_file&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Rack::Builder.load_file&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Rack::Builder.new_from_string&lt;/code&gt; 在 &lt;code&gt;Rack::Builder&lt;/code&gt; 类上下文中执行 &lt;code&gt;config.ru&lt;/code&gt;，&lt;code&gt;run&lt;/code&gt; 方法来源于此&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Rack::Handler::WEBrick.run&lt;/code&gt; 启动服务 &lt;code&gt;webrick&lt;/code&gt; 服务，在 &lt;code&gt;/&lt;/code&gt; 路由下挂载 &lt;code&gt;Rack::Server#wrapped_app&lt;/code&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;WEBrick::HTTPServer#mount&lt;/code&gt; 以 &lt;code&gt;Rack::Handler::WEBrick&lt;/code&gt; 和 &lt;code&gt;wrapped_app&lt;/code&gt; 作为参数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WEBrick::HTTPServer#start&lt;/code&gt; 启动 HTTP 服务&lt;/li&gt;
&lt;li&gt;请求到来时，创建 &lt;code&gt;Rack::Handler::WEBrick&lt;/code&gt; 实例，并包裹 &lt;code&gt;wrapped_app&lt;/code&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Rack::Handler::WEBrick#service&lt;/code&gt; 调用 &lt;code&gt;service&lt;/code&gt; 方法
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;app.call&lt;/code&gt; 调用 &lt;code&gt;call&lt;/code&gt; 方法，处理请求&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;过程代码&#34;&gt;过程代码&lt;/h3&gt;
&lt;p&gt;上述的黑魔法类似于下列代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# server.rb&lt;/span&gt;
require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rack&amp;#39;&lt;/span&gt;
require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;webrick&amp;#39;&lt;/span&gt;

app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Rack&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Builder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;app &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# config.ru&lt;/span&gt;
  run lambda {&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;env&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;, {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;}, &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;OK&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;}
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;WEBrick&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;HTTPServer&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;new &lt;span style=&#34;color:#e6db74&#34;&gt;:Port&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;
server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mount &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Rack&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Handler&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WEBrick&lt;/span&gt;, app
server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;webrick 作为服务器处理请求，可以使用 &lt;code&gt;ruby server.rb&lt;/code&gt; 直接运行。&lt;/p&gt;
&lt;h2 id=&#34;中间件&#34;&gt;中间件&lt;/h2&gt;
&lt;p&gt;中间件可以一层层叠加，外层调用里层的中间件，直到最后的 &lt;code&gt;servlet&lt;/code&gt;（run）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Middleware&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initialize&lt;/span&gt;(app)
    @app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; app
  &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt;(env)
    puts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dome something&amp;#34;&lt;/span&gt;
    env&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rack.some_header&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;setting an example&amp;#34;&lt;/span&gt;
    @app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;call(env)
  &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

use &lt;span style=&#34;color:#66d9ef&#34;&gt;Middleware&lt;/span&gt;
run lambda { &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;env&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;, { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/plain&amp;#34;&lt;/span&gt; }, &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;use&lt;/code&gt; 方法源码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt;(middleware, &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;args, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;block)
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; @map
        mapping, @map &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; @map, &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
        @use &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; proc { &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;app&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; generate_map(app, mapping) }
      &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
      @use &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; proc { &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;app&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; middleware&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;new(app, &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;args, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;block) }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;to_app&lt;/code&gt; 方法源码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@use&lt;/code&gt; 为 &lt;code&gt;proc&lt;/code&gt; 数组，意味着要调用 &lt;code&gt;user[0].call(app).call&lt;/code&gt; 才会执行 &lt;code&gt;middleware.call&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;第一次的 &lt;code&gt;call&lt;/code&gt; 方法由 &lt;code&gt;to_app&lt;/code&gt; 调用&lt;/li&gt;
&lt;li&gt;第二次的 &lt;code&gt;call&lt;/code&gt; 用户请求到来时调用，意味着不同请求使用同一个中间件对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;to_app&lt;/span&gt;
      app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; @map ? generate_map(@run, @map) : @run
      fail &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;missing run or map statement&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;unless&lt;/span&gt; app
      app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;freeze &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; @freeze_app
      app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; @use&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reverse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;inject(app) { &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;a, e&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; e&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;].&lt;/span&gt;tap { &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; x&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;freeze &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; @freeze_app } }
      @warmup&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;call(app) &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; @warmup
      app
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;e[a]&lt;/code&gt; 会调用 &lt;code&gt;call&lt;/code&gt; 方法，最里层的 app 不会执行 &lt;code&gt;call&lt;/code&gt; 方法，外层的中间件都会执行 &lt;code&gt;call&lt;/code&gt; 方法创建中间件对象&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lambda { &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;param: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;a&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; }
app&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;param: hello&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;代码过程&#34;&gt;代码过程&lt;/h3&gt;
&lt;p&gt;上述过程可简单的表达为如下代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# server.rb&lt;/span&gt;
require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rack&amp;#39;&lt;/span&gt;
require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;webrick&amp;#39;&lt;/span&gt;

@use &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;

@use &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; proc { &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;app&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Rack&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CommonLogger&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;new(app) }

app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; @run &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lambda { &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;env&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;, {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;}, &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;OK&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; }

app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; @use&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reverse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;inject(app) { &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;a, e&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; e&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; }

server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;WEBrick&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;HTTPServer&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;new &lt;span style=&#34;color:#e6db74&#34;&gt;:Port&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;
server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mount &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Rack&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Handler&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WEBrick&lt;/span&gt;, app
server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;call&lt;/code&gt; 方法穿透所有，层层包裹&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rack/rack&#34;&gt;rack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://notfound.cn/posts/ruby-rack/ - &lt;a href=&#34;http://www.beian.miit.gov.cn&#34;&gt;粤ICP备17092723号&lt;/a&gt;
</description>
        </item>
    
    
    
        <item>
        <title>Maven 基本使用</title>
        <link>https://notfound.cn/posts/maven-basic/</link>
        <pubDate>Tue, 19 May 2020 21:08:56 +0800</pubDate>
        
        <guid>https://notfound.cn/posts/maven-basic/</guid>
        <description>NotFound https://notfound.cn/posts/maven-basic/ -&lt;ul&gt;
&lt;li&gt;Apache Maven 3.6.3&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;生成-maven-工程&#34;&gt;生成 maven 工程&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;mvn archetype:generate &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -DarchetypeGroupId&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;org.apache.maven.archetypes &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -DarchetypeArtifactId&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;maven-archetype-quickstart &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -DarchetypeVersion&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1.4 &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -DarchetypeCatalog&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;internal &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -DgroupId&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;com.example &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -DartifactId&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;demo &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -Dversion&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0.0.1-SNAPSHOT &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -Dpackage&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;com.example.demo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;pom.xml&lt;/code&gt; 修改编译目标版本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;project.build.sourceEncoding&amp;gt;&lt;/span&gt;UTF-8&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/project.build.sourceEncoding&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;maven.compiler.source&amp;gt;&lt;/span&gt;1.8&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/maven.compiler.source&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;maven.compiler.target&amp;gt;&lt;/span&gt;1.8&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/maven.compiler.target&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;编译测试打包等&#34;&gt;编译、测试、打包等&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 移除 target 目录&lt;/span&gt;
mvn clean
&lt;span style=&#34;color:#75715e&#34;&gt;# 编译&lt;/span&gt;
mvn compile
&lt;span style=&#34;color:#75715e&#34;&gt;# 测试&lt;/span&gt;
mvn test
&lt;span style=&#34;color:#75715e&#34;&gt;# 打包&lt;/span&gt;
mvn package
&lt;span style=&#34;color:#75715e&#34;&gt;# 安装&lt;/span&gt;
mvn install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;可执行-jar&#34;&gt;可执行 jar&lt;/h2&gt;
&lt;p&gt;默认情况 jar 找不到 Main 方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ java -jar target/demo-0.0.1-SNAPSHOT.jar
target/demo-0.0.1-SNAPSHOT.jar中没有主清单属性
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;运行时指定入口&#34;&gt;运行时指定入口&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;java -cp target/demo-0.0.1-SNAPSHOT.jar com.example.demo.App
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;maven-shade-plugin&#34;&gt;maven-shade-plugin&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;pom.xml&lt;/code&gt; 中添加：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-shade-plugin&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.2.3&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;executions&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;package&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;
              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;shade&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;transformers&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;transformer&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;implementation=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
                  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;mainClass&amp;gt;&lt;/span&gt;com.example.demo.App&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/mainClass&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/transformer&amp;gt;&lt;/span&gt;
              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/transformers&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/executions&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;发布&#34;&gt;发布&lt;/h2&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://maven.apache.org/archetypes/maven-archetype-quickstart/&#34;&gt;Maven Quickstart Archetype&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://maven.apache.org/plugins/maven-shade-plugin/examples/executable-jar.html&#34;&gt;Executable JAR&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://notfound.cn/posts/maven-basic/ - &lt;a href=&#34;http://www.beian.miit.gov.cn&#34;&gt;粤ICP备17092723号&lt;/a&gt;
</description>
        </item>
    
    
    
        <item>
        <title>Webrick 工作过程</title>
        <link>https://notfound.cn/posts/ruby-webrick/</link>
        <pubDate>Tue, 19 May 2020 20:23:43 +0800</pubDate>
        
        <guid>https://notfound.cn/posts/ruby-webrick/</guid>
        <description>NotFound https://notfound.cn/posts/ruby-webrick/ -&lt;p&gt;Webrick 是用 Ruby 语言实现的 HTTP 服务。&lt;/p&gt;
&lt;h2 id=&#34;运行过程&#34;&gt;运行过程&lt;/h2&gt;
&lt;h3 id=&#34;创建监听-socket&#34;&gt;创建监听 socket&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;webrick&amp;#39;&lt;/span&gt;

server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;WEBrick&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;HTTPServer&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;new &lt;span style=&#34;color:#e6db74&#34;&gt;:Port&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8000&lt;/span&gt;
trap &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;INT&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shutdown &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# SIGINT&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;创建监听套接字，创建 mount table。mount table 将路由和 servlet 关联在一起&lt;/li&gt;
&lt;li&gt;注册 &lt;code&gt;SIGINT&lt;/code&gt; 信号处理函数，接收到该信号时停止服务。&lt;code&gt;CTRL + C&lt;/code&gt; 可产生该信号&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;挂载-proc&#34;&gt;挂载 proc&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mount_proc &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;req, res&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
  res&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;body &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;object_id: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;object_id&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;mount 的路由为 &lt;code&gt;/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;实际 mount 的 servlet 是一个 &lt;code&gt;HTTPServlet::ProcHandler&lt;/code&gt; 实例，该实例包裹了 proc&lt;/li&gt;
&lt;li&gt;这里不同请求使用同一个实例， 由 &lt;code&gt;HTTPServlet::ProcHandler#get_instance&lt;/code&gt; 决定&lt;/li&gt;
&lt;li&gt;mount table 路由为 key，servlet 为 value&lt;/li&gt;
&lt;li&gt;这里的 &lt;code&gt;object_id&lt;/code&gt; 是哪个实例的？&lt;/li&gt;
&lt;li&gt;可处理 &lt;code&gt;GET&lt;/code&gt; 和 &lt;code&gt;POST&lt;/code&gt; 请求&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;挂载-class&#34;&gt;挂载 class&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Simple&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;WEBrick&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;HTTPServlet&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractServlet&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;do_GET&lt;/span&gt;(request, response)
    status, content_type, body &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; do_stuff_with(request)

    response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;status &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;
    response&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;
    response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;body &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;object_id: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;object_id&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;do_stuff_with&lt;/span&gt;(request)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;you got a page&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mount &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/simple&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Simple&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;mount 的路由为 &lt;code&gt;/simple&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;mount servlet 为 Simple 类&lt;/li&gt;
&lt;li&gt;每次请求都会创建 Simple 实例, 由 &lt;code&gt;WEBrick::HTTPServlet::AbstractServlet.get_instance&lt;/code&gt; 决定的&lt;/li&gt;
&lt;li&gt;mount table 路由为 key，servlet 为 value&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;启动服务&#34;&gt;启动服务&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;IO.select&lt;/code&gt; 上阻塞，等待连接。处于循环之内&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WEBrick::GenericServer#start_thread&lt;/code&gt; 启动线程处理 socket
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;WEBrick::HTTPServer#run&lt;/code&gt; 处理请求。方法中存在一个循环，一直到 socket 非 &lt;code&gt;:Running&lt;/code&gt; 才退出
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;WEBrick::HTTPServer#service&lt;/code&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;WEBrick::HTTPServer#search_servlet&lt;/code&gt; 通过 mount table 查询路由对应的 servlet&lt;/li&gt;
&lt;li&gt;&lt;code&gt;si = servlet.get_instance(self, *options)&lt;/code&gt; 获取 servlet 实例，可能会创建新的 servlet 实例&lt;/li&gt;
&lt;li&gt;&lt;code&gt;si.service&lt;/code&gt; 通过 servlet 实例处理请求
&lt;ol&gt;
&lt;li&gt;根据请求类型调用 &lt;code&gt;do_GET&lt;/code&gt;、&lt;code&gt;do_POST&lt;/code&gt; 等方法&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;一个线程服务一个 socket&lt;/li&gt;
&lt;li&gt;每一个请求可能创建一个 servlet 实例&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ruby/webrick&#34;&gt;Webrick&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://notfound.cn/posts/ruby-webrick/ - &lt;a href=&#34;http://www.beian.miit.gov.cn&#34;&gt;粤ICP备17092723号&lt;/a&gt;
</description>
        </item>
    
    
    
        <item>
        <title>监控 socket 连接数</title>
        <link>https://notfound.cn/posts/monitoring-socket/</link>
        <pubDate>Mon, 18 May 2020 20:20:37 +0800</pubDate>
        
        <guid>https://notfound.cn/posts/monitoring-socket/</guid>
        <description>NotFound https://notfound.cn/posts/monitoring-socket/ -&lt;ul&gt;
&lt;li&gt;系统环境 Ubuntu 18.04&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过 gem &lt;a href=&#34;https://gems.ruby-china.com/gems/raindrops&#34;&gt;raindrops&lt;/a&gt; 可以获取连接数量，包括正在建立的连接数和已完成的连接数。&lt;/p&gt;
&lt;h2 id=&#34;连接数&#34;&gt;连接数&lt;/h2&gt;
&lt;p&gt;包括两种连接: UNIX domain socket 和 TCP socket。&lt;/p&gt;
&lt;h3 id=&#34;unix-domain-socket&#34;&gt;UNIX domain socket&lt;/h3&gt;
&lt;h4 id=&#34;用法&#34;&gt;用法&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;raindrops&amp;#39;&lt;/span&gt;

paths &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/run/containerd/containerd.sock&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Raindrops&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Linux&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;unix_listener_stats(paths)
&lt;span style=&#34;color:#75715e&#34;&gt;# {&amp;#34;/run/containerd/containerd.sock&amp;#34;=&amp;gt;#&amp;lt;struct Raindrops::ListenStats active=2, queued=0&amp;gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;active=2, queued=0&lt;/p&gt;
&lt;h4 id=&#34;原理&#34;&gt;原理&lt;/h4&gt;
&lt;p&gt;UNIX domain sockets 连接信息保存在 &lt;code&gt;/proc/net/unix&lt;/code&gt; 中，需要解析该文件。&lt;/p&gt;
&lt;p&gt;如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cat /proc/net/unix | grep &amp;#34;containerd.sock&amp;#34;
  Num             RefCount Protocol Flags   Type  St Inode Path
0000000000000000: 00000002 00000000 00010000 0001 01 26912 /run/containerd/containerd.sock
0000000000000000: 00000003 00000000 00000000 0001 03 31496 /run/containerd/containerd.sock
0000000000000000: 00000003 00000000 00000000 0001 03 28660 /run/containerd/containerd.sock
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;每个字段的含义，可以参考 &lt;code&gt;man 5 proc&lt;/code&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-man&#34; data-lang=&#34;man&#34;&gt;The fields are as follows:

Num:      the kernel table slot number.
RefCount: the number of users of the socket.
Protocol: currently always 0.
Flags:    the internal kernel flags holding the status of the socket.
Type:     the socket type.  For SOCK_STREAM sockets, this is 0001; for SOCK_DGRAM sockets, it is  0002;  and  for  SOCK_SEQ‐
          PACKET sockets, it is 0005.
St:       the internal state of the socket.
Path:     the  bound path (if any) of the socket.  Sockets in the abstract namespace are included in the list, and are shown
          with a Path that commences with the character &#39;@&#39;.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;因此可以通过字段 &lt;code&gt;St&lt;/code&gt; 获取连接状态信息，man page 中没有说明数字的具体含义，好在&lt;a href=&#34;https://yhbt.net/raindrops.git/tree/lib/raindrops/linux.rb#n19&#34;&gt;raindrops 源码注释&lt;/a&gt;中有提到：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Get ListenStats from an array of +paths+

Socket state mapping from integer =&amp;gt; symbol, based on socket_state
enum from include/linux/net.h in the \Linux kernel:
    typedef enum {
            SS_FREE = 0,              /* not allocated                */
            SS_UNCONNECTED,           /* unconnected to any socket    */
            SS_CONNECTING,            /* in process of connecting     */
            SS_CONNECTED,             /* connected to socket          */
            SS_DISCONNECTING          /* in process of disconnecting  */
    } socket_state;
* SS_CONNECTING maps to ListenStats#queued
* SS_CONNECTED maps to ListenStats#active
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;所以 &lt;code&gt;St&lt;/code&gt; 数字的含义为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;2&lt;/code&gt; 正在连接&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3&lt;/code&gt; 连接已建立&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tcp-socket&#34;&gt;TCP socket&lt;/h3&gt;
&lt;h4 id=&#34;用法-1&#34;&gt;用法&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;raindrops&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;Raindrops&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Linux&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tcp_listener_stats(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;127.0.0.1:6379&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;# {&amp;#34;127.0.0.1:6379&amp;#34;=&amp;gt;#&amp;lt;struct Raindrops::ListenStats active=1, queued=0&amp;gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;原理-1&#34;&gt;原理&lt;/h4&gt;
&lt;p&gt;从源码来看，是使用 &lt;code&gt;recvmsg&lt;/code&gt; 向内核发送消息来获取 socket 的信息，看起来有点复杂，至少 man page 没有介绍，暂且搁置。&lt;/p&gt;
&lt;h3 id=&#34;其他&#34;&gt;其他&lt;/h3&gt;
&lt;p&gt;通过 &lt;code&gt;lsof&lt;/code&gt; 命令也可以看到每个连接状态信息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo lsof -i:6379
COMMAND    PID  USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
redis-ser 1035 redis    6u  IPv4  25872      0t0  TCP localhost:6379 (LISTEN)
redis-ser 1035 redis    7u  IPv6  25877      0t0  TCP ip6-localhost:6379 (LISTEN)
redis-ser 1035 redis    8u  IPv4  67074      0t0  TCP localhost:6379-&amp;gt;localhost:59232 (ESTABLISHED)
redis-cli 6313 me       3u  IPv4  70052      0t0  TCP localhost:59232-&amp;gt;localhost:6379 (ESTABLISHED)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yhbt.net/raindrops.git&#34;&gt;raindrops&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://edsionte.com/techblog/archives/4140&#34;&gt;Netlink编程-使用NETLINK_INET_DIAG协议&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cnitblog.com/chlclan/archive/2006/06/20/12546.aspx&#34;&gt;netlink 编程介绍(V0.2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://notfound.cn/posts/monitoring-socket/ - &lt;a href=&#34;http://www.beian.miit.gov.cn&#34;&gt;粤ICP备17092723号&lt;/a&gt;
</description>
        </item>
    
    
    
        <item>
        <title>Git 如何识别二进制文件</title>
        <link>https://notfound.cn/posts/how-to-git-known-binary/</link>
        <pubDate>Sat, 16 May 2020 16:17:29 +0800</pubDate>
        
        <guid>https://notfound.cn/posts/how-to-git-known-binary/</guid>
        <description>NotFound https://notfound.cn/posts/how-to-git-known-binary/ -&lt;p&gt;Git 区分二进制和文本文件？&lt;/p&gt;
&lt;h2 id=&#34;源码&#34;&gt;源码&lt;/h2&gt;
&lt;p&gt;Git 是通过函数 &lt;a href=&#34;https://github.com/git/git/blob/d8437c57fa0752716dde2d3747e7c22bf7ce2e41/xdiff-interface.c#L188&#34;&gt;buffer_is_binary&lt;/a&gt; 识别二进制：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define FIRST_FEW_BYTES 8000
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;buffer_is_binary&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;ptr, &lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; size)
{
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (FIRST_FEW_BYTES &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; size)
    size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; FIRST_FEW_BYTES;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!!&lt;/span&gt;memchr(ptr, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, size);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;文件前 8000 个字节与 &lt;code&gt;\0&lt;/code&gt; 进行比较，非文件末尾出现 &lt;code&gt;\0&lt;/code&gt; 就认为是二进制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C 语言中，字符串一定是以 &lt;code&gt;\0&lt;/code&gt; 结束，简单的想一想，感觉没毛病。&lt;/p&gt;
&lt;h2 id=&#34;问题&#34;&gt;问题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Q: 多字节文件编码中，难道其中的某个字节不会出现 &lt;code&gt;\0&lt;/code&gt;？&lt;/p&gt;
&lt;p&gt;文件内容&lt;code&gt;1&lt;/code&gt;，保存为 utf16：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ file utf16.txt
utf16.txt: Little-endian UTF-16 Unicode text, with no line terminators

$ hexdump -C utf16.txt
00000000  ff fe 31 00 0a 00                                 |..1...|
00000006
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看差异时，会被错误识别为二进制文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;diff --git a/utf16.txt b/utf16.txt
new file mode 100644
index 0000000..0811156
Binary files /dev/null and b/utf16.txt differ

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然而 GitHub 不会将 UTF-16 识别为二进制，说明和 Git 命令识别方式有区别。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;charlock_holmes&#34;&gt;charlock_holmes&lt;/h2&gt;
&lt;p&gt;GitHub 使用 charlock_holmes 来检测二进制文件， 该 gem 包方法将常见的&lt;a href=&#34;https://github.com/brianmario/charlock_holmes/blob/e52cb2ec6d31615836935344de47998c4e399227/ext/charlock_holmes/encoding_detector.c#L61&#34;&gt;文件类型头部列出&lt;/a&gt;（包括 UTF-16 和 UTF-32）单独进行比较，以减少误伤：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;detect_binary_content&lt;/span&gt;(VALUE self, VALUE rb_str) {
	size_t buf_len, scan_len;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;buf;

  &lt;span style=&#34;color:#75715e&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;   * 省略大部分代码
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;   */&lt;/span&gt;

	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (buf_len &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {
		&lt;span style=&#34;color:#75715e&#34;&gt;// UTF-16BE
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;memcmp(buf, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\xfe\xff&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
			&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;

		&lt;span style=&#34;color:#75715e&#34;&gt;// UTF-16LE
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;memcmp(buf, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\xff\xfe&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
			&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
	}

	&lt;span style=&#34;color:#75715e&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;	 * If we got this far, any NULL bytes within the `scan_len`
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;	 * range will likely mean the contents are binary.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;	 */&lt;/span&gt;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (scan_len &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; buf_len)
		buf_len &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; scan_len;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!!&lt;/span&gt;memchr(buf, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, buf_len);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/UTF-16&#34;&gt;UTF-16&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/brianmario/charlock_holmes&#34;&gt;charlock_holmes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://notfound.cn/posts/how-to-git-known-binary/ - &lt;a href=&#34;http://www.beian.miit.gov.cn&#34;&gt;粤ICP备17092723号&lt;/a&gt;
</description>
        </item>
    
    
    
        <item>
        <title>JNI 基本使用</title>
        <link>https://notfound.cn/posts/java-native-interface-start/</link>
        <pubDate>Sat, 16 May 2020 11:48:23 +0800</pubDate>
        
        <guid>https://notfound.cn/posts/java-native-interface-start/</guid>
        <description>NotFound https://notfound.cn/posts/java-native-interface-start/ -&lt;ul&gt;
&lt;li&gt;系统环境 Ubuntu 18.04&lt;/li&gt;
&lt;li&gt;cmake 编译 c 源码&lt;/li&gt;
&lt;li&gt;maven 打包&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;基本用法&#34;&gt;基本用法&lt;/h2&gt;
&lt;p&gt;静态方法，不涉及参数和返回值传递。&lt;/p&gt;
&lt;p&gt;项目目录结构如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.
├── pom.xml
└── src
    └── main
        ├── java
        │   └── com
        │       └── example
        │           ├── App.java
        │           └── HelloNative.java     # 加载 .so 和调用 c 方法的 class
        ├── jni
        │   ├── CMakeLists.txt
        │   ├── com_example_HelloNative.c    # c 函数文件
        │   └── com_example_HelloNative.h    # javah 生成的头文件
        └── resources
            └── native
                └── linux
                    └── libHelloNative.so    # 编译生成的 so 文件目录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;添加 &lt;code&gt;HelloNative.java&lt;/code&gt;，注意关键字 &lt;code&gt;native&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; com.example&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
   
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HelloNative&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;native&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;greeting&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过 &lt;code&gt;javah&lt;/code&gt; 生成头文件 &lt;code&gt;com_example_HelloNative.h&lt;/code&gt;，使用的时编译生成的 .class&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;mvn compile
cd target/classes/
javah -d ../../src/main/jni com.example.HelloNative
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加 &lt;code&gt;com_example_HelloNative.c&lt;/code&gt;，函数名直接从 &lt;code&gt;.h&lt;/code&gt; 复制过来&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;com_example_HelloNative.h&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;   
JNIEXPORT &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; JNICALL &lt;span style=&#34;color:#a6e22e&#34;&gt;Java_com_example_HelloNative_greeting&lt;/span&gt; (JNIEnv &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;env, jclass jc) {
  printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello Native!&amp;#34;&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加 &lt;code&gt;CMakeLists.txt&lt;/code&gt;，更多用法需要查看&lt;a href=&#34;https://cmake.org/documentation/&#34;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmake&#34; data-lang=&#34;cmake&#34;&gt;cmake_minimum_required (&lt;span style=&#34;color:#e6db74&#34;&gt;VERSION&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;2.6&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;project(&lt;span style=&#34;color:#e6db74&#34;&gt;HelloNative&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;MESSAGE(&lt;span style=&#34;color:#e6db74&#34;&gt;STATUS&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PROJECT_NAME: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;${&lt;/span&gt;PROJECT_NAME&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 仅支持 Linux
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;if (&lt;span style=&#34;color:#e6db74&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;CMAKE_HOST_UNIX&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;  message(&lt;span style=&#34;color:#e6db74&#34;&gt;FATAL_ERROR&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;not linux&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;endif()&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 需要设置 JAVA_HOME
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;if(&lt;span style=&#34;color:#e6db74&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;DEFINED&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;ENV{JAVA_HOME}&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;  message(&lt;span style=&#34;color:#e6db74&#34;&gt;FATAL_ERROR&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;not defined environment variable:JAVA_HOME&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;endif()&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;MESSAGE( &lt;span style=&#34;color:#e6db74&#34;&gt;STATUS&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JAVA_HOME: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;$ENV{&lt;/span&gt;JAVA_HOME&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;SET(&lt;span style=&#34;color:#e6db74&#34;&gt;JAVA_INCLUDE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$ENV{JAVA_HOME}/include/&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;SET(&lt;span style=&#34;color:#e6db74&#34;&gt;JAVA_INCLUDE_OS&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$ENV{JAVA_HOME}/include/linux/&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 添加 include 头文件搜索路径
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;include_directories(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${PROJECT_SOURCE_DIR}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${JAVA_INCLUDE}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${JAVA_INCLUDE_OS}&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 添加编译文件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;add_library(&lt;span style=&#34;color:#e6db74&#34;&gt;HelloNative&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;SHARED&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;com_example_HelloNative.c&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;set(&lt;span style=&#34;color:#e6db74&#34;&gt;CMAKE_INSTALL_PREFIX&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${PROJECT_SOURCE_DIR}/../&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;set(&lt;span style=&#34;color:#e6db74&#34;&gt;MAVEN_PATH&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resources/native&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 编辑生成的 .so 安装到 resources 目录
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;install (&lt;span style=&#34;color:#e6db74&#34;&gt;TARGETS&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;HelloNative&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;DESTINATION&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${CMAKE_INSTALL_PREFIX}${MAVEN_PATH}/linux&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;手动生成 &lt;code&gt;libHelloNative.so&lt;/code&gt;，这一步可以添加到 &lt;code&gt;pom.xml&lt;/code&gt; 中&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;mkdir src/main/jni/build
cd src/main/jni/build 
cmake ..
make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加载 &lt;code&gt;.so&lt;/code&gt; 文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HelloNative&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;native&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;greeting&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
   
  &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;// System.loadLibrary(&amp;#34;HelloNative&amp;#34;);
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/tmp/libHelloNative.so&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;System.load()&lt;/code&gt; 方法需要使用绝对路径。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;System.loadLibrary()&lt;/code&gt; 参数的名称没有前、后缀，使用该方法时需要将 &lt;code&gt;.so&lt;/code&gt; 目录添加到环境变量 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;，否则无法找到 &lt;code&gt;.so&lt;/code&gt;，会出现如下错误：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;java -jar target/jni-1.0-SNAPSHOT.jar
Exception in thread &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;main&amp;#34;&lt;/span&gt; java.lang.UnsatisfiedLinkError: no HelloNative in java.library.path: &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;/usr/java/packages/lib, /usr/lib/x86_64-linux-gnu/jni, /lib/x86_64-linux-gnu, /usr/lib/x86_64-linux-gnu, /usr/lib/jni, /lib, /usr/lib&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
        at java.base/java.lang.ClassLoader.loadLibrary&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ClassLoader.java:2670&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        at java.base/java.lang.Runtime.loadLibrary0&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Runtime.java:830&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        at java.base/java.lang.System.loadLibrary&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;System.java:1870&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        at com.example.HelloNative.&amp;lt;clinit&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;HelloNative.java:7&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        at com.example.App.main&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;App.java:5&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;问题&#34;&gt;问题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Q: 使用 maven 打包成 jar 时，&lt;code&gt;.so&lt;/code&gt; 被压缩到了 &lt;code&gt;jar&lt;/code&gt; 包中，无法直接读取。&lt;/p&gt;
&lt;p&gt;可以通过 java 中 resource 相关方法将 &lt;code&gt;.so&lt;/code&gt; 文件写入到临时目录 &lt;code&gt;System.getProperty(&amp;quot;java.io.tmpdir&amp;quot;)&lt;/code&gt;，然后通过 &lt;code&gt;System.load&lt;/code&gt; 以绝对路径为参数进行加载。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Q: 版本升级或者不同版本需要同时存在如何处理？&lt;/p&gt;
&lt;p&gt;可以考虑临时的文件名上加上版本号如 &lt;code&gt;libau.so.2.10&lt;/code&gt;，避免版本冲突。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dynamsoft-dbr/java-jni-barcode&#34;&gt;https://github.com/dynamsoft-dbr/java-jni-barcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《Java核心技术·卷 II》&lt;/li&gt;
&lt;/ul&gt;
- https://notfound.cn/posts/java-native-interface-start/ - &lt;a href=&#34;http://www.beian.miit.gov.cn&#34;&gt;粤ICP备17092723号&lt;/a&gt;
</description>
        </item>
    
    
  </channel>
</rss> 