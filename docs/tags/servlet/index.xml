<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>servlet on NotFound</title>
    <link>https://notfound.cn/tags/servlet/</link>
    <description>Recent content in servlet on NotFound</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&lt;a href=&#34;http://www.beian.miit.gov.cn&#34;&gt;粤ICP备17092723号&lt;/a&gt;
</copyright>
    <lastBuildDate>Wed, 14 Apr 2021 19:50:00 +0800</lastBuildDate><atom:link href="https://notfound.cn/tags/servlet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring Boot 添加 servlet 以及 filter</title>
      <link>https://notfound.cn/posts/java-spring-servlet-filter/</link>
      <pubDate>Wed, 14 Apr 2021 19:50:00 +0800</pubDate>
      
      <guid>https://notfound.cn/posts/java-spring-servlet-filter/</guid>
      <description>Spring Boot 添加 servlet 以及 filter  OpenJDK 11 Gradle 6.8  依赖 implementation &amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39; servlet ServletWrappingController @Bean public ServletWrappingController wrappingController() { ServletWrappingController controller = new ServletWrappingController(); controller.setServletClass(WrappingServlet.class); controller.setServletName(&amp;#34;wrapping-servlet&amp;#34;); return controller; } @Bean public SimpleUrlHandlerMapping urlHandlerMapping() { SimpleUrlHandlerMapping mapping = new SimpleUrlHandlerMapping(); mapping.setUrlMap(Map.of(&amp;#34;/wrapping/*&amp;#34;, &amp;#34;wrappingController&amp;#34;)); mapping.setOrder(Ordered.LOWEST_PRECEDENCE - 2); return mapping; }  req.getPathInfo() 为 null  ServletRegistrationBean @Bean public ServletRegistrationBean&amp;lt;HelloServlet&amp;gt; helloServletServletRegistrationBean() { ServletRegistrationBean&amp;lt;HelloServlet&amp;gt; registration = new ServletRegistrationBean&amp;lt;&amp;gt;(); registration.setServlet(new HelloServlet()); registration.setUrlMappings(List.of(&amp;#34;/hello/*&amp;#34;)); return registration; }  req.</description>
    </item>
    
  </channel>
</rss>
